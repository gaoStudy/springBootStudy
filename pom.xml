<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.gaodev</groupId>
    <artifactId>springbootstudy</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>springbootstudy</name>
    <description>Demo project for Spring Boot</description>

    <!-- 继承 spring boot 父包 将此模块做为springboot-starter的子模块-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!--全局配置-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <!--  依赖版本  -->
        <druid-version>1.1.8</druid-version>
        <jjwt-version>0.9.1</jjwt-version>
    </properties>

    <!--引入相关依赖-->
    <dependencies>

        <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt-version}</version>
        </dependency>

        <!--工具包 包括 热部署-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <!--true表示依赖不传递-->
            <optional>true</optional>
            <!--<scope>true</scope>-->
        </dependency>

        <!--https://www.joda.org/joda-time/index.html

        -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.1</version>
        </dependency>

        <!--货币金额-->
        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-money</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>6.0.1.GA</version>
        </dependency>

        <!-- Spring Boot -->
        <!-- web依赖 构建web项目模块 包括了Tomcat和spring-webmvc -->
        <!-- spring-boot-starter-web 默认依赖了tomcat的starter 所以使得项目可以直接运行而不需要部署到tomcat中-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <!--freemarker页面-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-freemarker</artifactId>-->
        <!--</dependency>-->

        <!--主要增加 spring-boot-starter-thymeleaf 和 nekohtml 这两个依赖
        spring-boot-starter-thymeleaf：Thymeleaf 自动配置
        nekohtml：允许使用非严格的 HTML 语法-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>1.9.22</version>
        </dependency>

        <!--jdbc-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-jdbc</artifactId>-->
        <!--</dependency>-->

        <!--jpa-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!--会话存于redis
        spring-session + redis解决session共享问题
        -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
            <!--<version>2.0.5.RELEASE</version>-->
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>2.0.9.RELEASE</version>
        </dependency>

        <!--  redis  -->
        <!--经认证，在spring boot的版本号为1.5.0的时候 添加spring-boot-starter-reids就找不到jar包了,
也就是这个jar包直接被废弃了。所以千万要注意的是：如果你的spring boot的版本号在1.5.0以后的，
添加redis的jar包就必须是spring-boot-starter-data-redis-->

        <!--org.springframework.boot:spring-boot-starter-data-redis，
        org.apache.commons:commons-pool2 两个依赖-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- 添加redis 废弃
          http://www.redis.net.cn/order/-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-redis</artifactId>-->
            <!--<version>1.4.5.RELEASE</version>-->
        <!--</dependency>-->

        <!--???-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-cache</artifactId>-->
        <!--</dependency>-->

        <!--mybatis-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!--mybatis分页依赖
		https://github.com/pagehelper/pagehelper-spring-boot-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.2.5</version>
        </dependency>

        <!--数据库操作采用 tk.mybatis 框架，需增加相关依赖-->
        <!-- ？？？ 单表通用增删改查，文档地址  源码地址：https://github.com/abel533/Mapper
		文档地址： https://mapperhelper.github.io
		使用文档 https://github.com/abel533/Mapper/wiki-->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!--???-->
        <!--<dependency>-->
            <!--<groupId>tk.mybatis</groupId>-->
            <!--<artifactId>mapper-generator</artifactId>-->
            <!--<version>1.0.0</version>-->
        <!--</dependency>-->

        <!--？？？ 代码生成器-->
        <!--<dependency>-->
            <!--<groupId>org.mybatis.generator</groupId>-->
            <!--<artifactId>mybatis-generator-core</artifactId>-->
            <!--<version>1.3.5</version>-->
            <!--<scope>test</scope>-->
        <!--</dependency>-->


        <!-- mysql 版本号？？？-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <!--？？-->
            <scope>runtime</scope>
        </dependency>

        <!-- druid 数据库连接池 -->
        <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid-version}</version>
        </dependency>

        <!--druid -->
        <!--<dependency>-->
            <!--<groupId>com.alibaba</groupId>-->
            <!--<artifactId>druid-spring-boot-starter</artifactId>-->
            <!--<version>1.1.10</version>-->
        <!--</dependency>-->


        <!-- HikariCP 数据库连接池 spring boot 2.0+ 默认的
         https://mvnrepository.com/artifact/com.zaxxer/HikariCP
          -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>3.2.0</version>
        </dependency>


        <!--阿里 FastJson依赖,处理json数据-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.22</version>
        </dependency>

        <!--RabbitMq  依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <!--shiro权限管理依赖-->
        <!--<dependency>-->
            <!--<groupId>org.apache.shiro</groupId>-->
            <!--<artifactId>shiro-spring-boot-web-starter</artifactId>-->
            <!--<version>1.4.0-RC2</version>-->
        <!--</dependency>-->

        <!-- Spring Security -->

        <!--注意：spring-cloud 版本
            错误： No active profile set, falling back to default profiles: default
        -->
        <!--<dependency>-->
            <!--<groupId>org.springframework.cloud</groupId>-->
            <!--<artifactId>spring-cloud-starter-oauth2</artifactId>-->
            <!--<version>2.1.3.RELEASE</version>-->
        <!--</dependency>-->

        <!--删除 spring-boot-starter-security 依赖，因为 spring-cloud-starter-oauth2 包含了该依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>


        <!--<dependency>-->
            <!--<groupId>org.springframework.security</groupId>-->
            <!--<artifactId>spring-security-jwt</artifactId>-->
        <!--</dependency>-->


        <!--文件上传-->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>

        <!--发送邮件-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!--动态定时任务-->
        <!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>2.2.1</version>
        </dependency>

        <!-- 导出excel表格
        文档http://poi.apache.org/apidocs/index.html-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.9</version>
        </dependency>

        <!-- 图片处理 -->
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>0.4.8</version>
        </dependency>

        <!--swagger2接口文档处理-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.4.0</version>
        </dependency>

        <!--aop切面依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--监控-->
        <!--Spring Boot-Actuator  项目健康检查 -->
        <!--关于springboot2.0  actuator新特性
         http://blog.didispace.com/Spring-Boot-2.0-Migration-Guide/  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>2.0.4.RELEASE</version>
        </dependency>

        <!--日志-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>compile</scope>
        </dependency>

        <!--微信
        微信小程序：weixin-java-miniapp
        微信支付：weixin-java-pay
        微信开放平台：weixin-java-open
        公众号（包括订阅号和服务号）：weixin-java-mp
        企业号/企业微信：weixin-java-cp
        -->
        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-pay</artifactId>
            <version>3.5.0</version>
        </dependency>

        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-mp</artifactId>
            <version>3.5.0</version>
        </dependency>

        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-open</artifactId>
            <version>3.5.0</version>
        </dependency>



        <!--数据校验-->
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.4.3.Final</version>
        </dependency>



        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>


        <!--测试模块，包括JUnit、Hamcrest、Mockito-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.4</version>
        </dependency>

        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
            <version>3.6.5</version>
            <!--<version>5.4.3</version>-->
        </dependency>

    </dependencies>

    <!-- 将应用打包成一个可以执行的jar包 -->
    <build>
        <!--指定打包名称-->
        <finalName>gao-study</finalName>
        <plugins>
            <!--maven 打包 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>

                <configuration>
                    <mainClass>com.gaodev.springbootstudy.SpringbootstudyApplication</mainClass>
                    <!--不知是否有用 如 热部署功能-->
                    <!--fork 如果没有该项配置 整个devtools不会起作用-->
                    <fork>true</fork>
                </configuration>
				
				<!--创建一个自动可执行的jar或war文件 -->
				<!--
				<executions>
                    <execution>
                        <goals> 
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
				-->
            </plugin>

            <!--generatorConfig-->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.5</version>
                <dependencies>
                    <dependency>
                        <groupId>org.mybatis.generator</groupId>
                        <artifactId>mybatis-generator-core</artifactId>
                        <version>1.3.5</version>
                    </dependency>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <!--<version>5.1.35</version>-->
                    </dependency>
                </dependencies>

                <!--mybatis generator -->
				<!--创建一个自动可执行的jar或war文件 -->
                <executions>
                    <execution>
                        <id>mybatis generator</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!--配置文件的路径-->
                    <configurationFile>${basedir}/src/main/resources/generatorConfig.xml</configurationFile>
                    <!--允许移动生成的文件 -->
                    <verbose>true</verbose>
                    <!--允许覆盖生成的文件 警示：只是测试，生产不可以开启-->
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>

            <!--<plugin>-->
                <!--<groupId>org.mybatis.generator</groupId>-->
                <!--<artifactId>mybatis-generator-maven-plugin</artifactId>-->
                <!--<version>1.3.5</version>-->
                <!--<configuration>-->
                    <!--<configurationFile>${basedir}/src/main/resources/generator/generatorConfig.xml</configurationFile>-->
                    <!--<overwrite>true</overwrite>-->
                    <!--<verbose>true</verbose>-->
                <!--</configuration>-->
                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>mysql</groupId>-->
                        <!--<artifactId>mysql-connector-java</artifactId>-->
                        <!--<version>${mysql.version}</version>-->
                    <!--</dependency>-->
                    <!--<dependency>-->
                        <!--<groupId>tk.mybatis</groupId>-->
                        <!--<artifactId>mapper</artifactId>-->
                        <!--<version>3.4.4</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
            <!--</plugin>-->

        </plugins>
    </build>


</project>
